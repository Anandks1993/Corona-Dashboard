{"version":3,"sources":["scenes/Global.js","scenes/History.js","scenes/Country.js","scenes/Dashboard.js","utils/virusIcon.js","scenes/Header.js","App.js","serviceWorker.js","index.js"],"names":["Global","useState","stats","setStats","loading","setLoading","useEffect","fetch","then","response","a","json","res","catch","err","console","log","className","type","color","height","width","cases","total","active","recovered","deaths","History","selectedCountry","history","setHistory","data","style","maxWidth","margin","top","right","left","bottom","dataKey","reversed","tickFormatter","value","Date","toLocaleDateString","strokeDasharray","labelFormatter","toLocaleString","dot","name","stroke","activeDot","r","Country","countries","setCountries","country","setCountry","isLoading","setIsLoading","Promise","all","allCountires","handleCountryChange","e","target","spinner","text","length","for","id","onChange","map","key","Dashboard","Icon","xmlns","viewBox","fill","WebkitTextIndent","textIndent","WebkitTextAlign","textAlign","lineHeight","WebkitTextTransform","textTransform","blockProgression","InkscapeFontSpecification","d","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"0TAuEeA,EApEA,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,oBAAS,GAFtB,mBAEVG,EAFU,KAEDC,EAFC,KAuBjB,OAnBAC,qBAAU,WACNC,MAAM,0DAA2D,CAC7D,OAAU,MACV,QAAW,CACP,kBAAmB,2BACnB,iBAAkB,wDAGrBC,KAPL,uCAOU,WAAMC,GAAN,eAAAC,EAAA,sEACgBD,EAASE,OADzB,OACIC,EADJ,OAEFT,EAASS,EAAIH,UACbJ,GAAW,GAHT,2CAPV,uDAYKQ,OAAM,SAAAC,GACHT,GAAW,GACXU,QAAQC,IAAIF,QAErB,IAECV,EAEI,yBAAKa,UAAU,uCACX,kBAAC,IAAD,CAAcC,KAAK,kBAAkBC,MAAM,UAAUC,OAAQ,MAAOC,MAAO,SAKnF,yBAAKJ,UAAU,oBACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,eAAef,EAAM,GAAGoB,MAAMC,UAIvD,yBAAKN,UAAU,oCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,eAAef,EAAM,GAAGoB,MAAME,WAIvD,yBAAKP,UAAU,oCACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,mBACA,uBAAGA,UAAU,eAAef,EAAM,GAAGoB,MAAMG,cAIvD,yBAAKR,UAAU,uBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,eAAef,EAAM,GAAGwB,OAAOH,Y,0BC6BrDI,EAxFC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EACP3B,mBAAS,IADF,mBAC9B4B,EAD8B,KACrBC,EADqB,OAEP7B,oBAAS,GAFF,mBAE9BG,EAF8B,KAErBC,EAFqB,KAsCrC,OAlCAC,qBAAU,WACFsB,EACArB,MAAM,oDAAD,OAAqDqB,GAAmB,CACzE,OAAU,MACV,QAAW,CACP,kBAAmB,2BACnB,iBAAkB,wDAEvBpB,KANH,uCAMQ,WAAMuB,GAAN,eAAArB,EAAA,sEACgBqB,EAAKpB,OADrB,OACET,EADF,OAEJ4B,EAAW5B,EAAMO,UACjBJ,GAAW,GAHP,2CANR,uDAUGQ,OAAM,SAAAC,GACLT,GAAW,GACXU,QAAQC,IAAIF,MAGhBP,MAAM,uDAAwD,CAC1D,OAAU,MACV,QAAW,CACP,kBAAmB,2BACnB,iBAAkB,wDAEvBC,KANH,uCAMQ,WAAMuB,GAAN,eAAArB,EAAA,sEACgBqB,EAAKpB,OADrB,OACET,EADF,OAEJ4B,EAAW5B,EAAMO,UACjBJ,GAAW,GAHP,2CANR,uDAUGQ,OAAM,SAAAC,GACLT,GAAW,GACXU,QAAQC,IAAIF,QAGrB,CAACc,IAEAxB,EAEI,yBAAKa,UAAU,uCACX,kBAAC,IAAD,CAAcC,KAAK,kBAAkBC,MAAM,UAAUC,OAAQ,MAAOC,MAAO,SAMnF,yBAAKJ,UAAS,wCAAmCW,EAAkB,cAAgB,KAE3EA,EACI,yBAAKX,UAAU,iCACX,wCAAcW,EAAd,MAGJ,KAER,yBAAKI,MAAO,CAAEX,MAAO,OAAQY,SAAU,QAASb,OAAQ,UACpD,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIW,KAAMF,EACNK,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAE/C,kBAAC,IAAD,CACIC,QAAQ,OACRC,UAAQ,EACRC,cAAe,SAAAC,GACX,OAAO,IAAIC,KAAKD,GAAOE,wBAG/B,kBAAC,IAAD,CAAOL,QAAQ,iBACf,kBAAC,IAAD,CAAeM,gBAAgB,QAC/B,kBAAC,IAAD,CACIC,eAAgB,SAAAJ,GACZ,OAAO,IAAIC,KAAKD,GAAOK,oBAG/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAM7B,KAAK,WAAW8B,KAAK,EAAOC,KAAK,cAAcV,QAAQ,cAAcW,OAAO,UAAUC,UAAW,CAAEC,EAAG,KAC5G,kBAAC,IAAD,CAAMlC,KAAK,WAAW8B,KAAK,EAAOC,KAAK,eAAeV,QAAQ,eAAeW,OAAO,UAAUC,UAAW,CAAEC,EAAG,KAC9G,kBAAC,IAAD,CAAMlC,KAAK,WAAW8B,KAAK,EAAOC,KAAK,kBAAkBV,QAAQ,kBAAkBW,OAAO,UAAUC,UAAW,CAAEC,EAAG,KACpH,kBAAC,IAAD,CAAMlC,KAAK,WAAW8B,KAAK,EAAOC,KAAK,eAAeV,QAAQ,eAAeW,OAAO,UAAUC,UAAW,CAAEC,EAAG,UC8DvHC,EA5IC,WAAO,IAAD,EACgBpD,mBAAS,IADzB,mBACXqD,EADW,KACAC,EADA,OAEYtD,oBAAS,GAFrB,mBAEXG,EAFW,KAEFC,EAFE,OAGYJ,mBAAS,SAHrB,mBAGXuD,EAHW,KAGFC,EAHE,OAIQxD,mBAAS,IAJjB,mBAIXC,EAJW,KAIJC,EAJI,OAKgBF,oBAAS,GALzB,mBAKXyD,EALW,KAKAC,EALA,KAOlBrD,qBAAU,WACNsD,QAAQC,IAAI,CACRtD,MAAM,6CAA8C,CAChD,OAAU,MACV,QAAW,CACP,kBAAmB,2BACnB,iBAAkB,wDAG1BA,MAAM,uDAAD,OAAwDiD,GAAW,CACpE,OAAU,MACV,QAAW,CACP,kBAAmB,2BACnB,iBAAkB,0DAG3BhD,KAfH,uCAeQ,qCAAAE,EAAA,gFAAQoD,EAAR,KAAsB/B,EAAtB,cACoB+B,EAAanD,OADjC,cACE2C,EADF,gBAEgBvB,EAAKpB,OAFrB,OAEET,EAFF,OAGJqD,EAAaD,EAAU7C,UACvBN,EAASD,EAAMO,UACfJ,GAAW,GALP,4CAfR,uDAqBGQ,OAAM,SAAAC,GACLT,GAAW,GACXU,QAAQC,IAAIF,QAEjB,IAEH,IAAMiD,EAAsB,SAAAC,GACxBL,GAAa,GACbF,EAAWO,EAAEC,OAAOvB,OACpBnC,MAAM,uDAAD,OAAwDyD,EAAEC,OAAOvB,OAAS,CAC3E,OAAU,MACV,QAAW,CACP,kBAAmB,2BACnB,iBAAkB,wDAEvBlC,KANH,uCAMQ,WAAMuB,GAAN,eAAArB,EAAA,sEACgBqB,EAAKpB,OADrB,OACET,EADF,OAEJC,EAASD,EAAMO,UACfkD,GAAa,GAHT,2CANR,uDAUG9C,OAAM,SAAAC,GACL6C,GAAa,GACb5C,QAAQC,IAAIF,OAwBpB,OAAIV,EAEI,yBAAKa,UAAU,uCACX,kBAAC,IAAD,CAAcC,KAAK,kBAAkBC,MAAM,UAAUC,OAAQ,MAAOC,MAAO,SAMnF,kBAAC,IAAD,CACI6C,SAAO,EACP1C,OAAQkC,EACRS,KAAK,kBAEL,yBAAKlD,UAAU,oBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,2CAnCF,IAArBqC,EAAUc,OAGN,0BAAMnD,UAAU,SACZ,yBAAKA,UAAU,gDACX,2BAAOoD,IAAI,UAAUpD,UAAU,2EAA0E,qDACzG,yBAAKA,UAAU,4DACX,4BAAQqD,GAAG,UAAUrD,UAAU,iBAAiByB,MAAOc,EAASe,SAAUR,GACrET,EAAUkB,KAAI,SAAAhB,GAAO,OAAI,4BAAQiB,IAAKjB,EAASd,MAAOc,GAAUA,UAQlF,OAuBC,yBAAKvC,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,eAAef,EAAM,GAAGoB,MAAMC,UAIvD,yBAAKN,UAAU,wBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,eAAef,EAAM,GAAGoB,MAAME,YAK3D,yBAAKP,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,mBACA,uBAAGA,UAAU,eAAef,EAAM,GAAGoB,MAAMG,cAIvD,yBAAKR,UAAU,wBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,eAAef,EAAM,GAAGwB,OAAOH,YAMhE,yBAAKN,UAAU,6BACX,kBAAC,EAAD,CAASW,gBAAiB4B,QCnG/BkB,EAlCG,WACd,OACI,yBAAKzD,UAAU,kBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,aAAd,oBACA,8BAEJ,yBAAKA,UAAU,UACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,aAAd,gBACA,8BAEJ,yBAAKA,UAAU,UACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,aAAd,sBACA,8BAEJ,yBAAKA,UAAU,UACX,kBAAC,EAAD,UCLL0D,MA1Bf,WACE,OACE,yBACIvD,OAAO,OACPC,MAAM,OACNuD,MAAM,6BAA6BC,QAAQ,YAC3C7C,MAAO,CAAE8C,KAAM,UAEjB,0BACE9C,MAAO,CACL+C,iBAAkB,IAClBC,WAAY,IACZC,gBAAiB,QACjBC,UAAW,QACXC,WAAY,SACZC,oBAAqB,OACrBC,cAAe,OACfC,iBAAkB,KAClBC,0BAA2B,uBAE7BC,EAAE,m7BCLKC,EAbA,WACX,OACI,yBAAKxE,UAAU,kEACX,yBAAKA,UAAU,0DACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,OAEJ,wBAAIA,UAAU,OAAd,iC,OCKDyE,MAVf,WAEE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9F,MAAK,SAAA+F,GACJA,EAAaC,gBAEd3F,OAAM,SAAA4F,GACL1F,QAAQ0F,MAAMA,EAAMC,c","file":"static/js/main.d784bf92.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Global = () => {\r\n    const [stats, setStats] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetch('https://covid-193.p.rapidapi.com/statistics?country=All', {\r\n            'method': 'GET',\r\n            'headers': {\r\n                'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n                'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\r\n            }\r\n        })\r\n            .then(async response => {\r\n                const res = await response.json();\r\n                setStats(res.response);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n    \r\n    if (loading) {\r\n        return (\r\n            <div className='d-flex justify-content-center w-100'>\r\n                <ReactLoading type='spinningBubbles' color='#347B98' height={'10%'} width={'10%'} />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"row display-flex\">\r\n            <div className=\"col col-12 col-sm-3 mb-3 mb-sm-0\">\r\n                <div className=\"card h-100 bg-tiber\">\r\n                    <div className=\"card-body text-center\">\r\n                        <h5 className=\"card-title\">Total Cases</h5>\r\n                        <p className='stat-number'>{stats[0].cases.total}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col col-12 col-sm-3 mb-3 mb-sm-0\">\r\n                <div className=\"card h-100 bg-green\">\r\n                    <div className=\"card-body text-center\">\r\n                        <h5 className=\"card-title\">Active Cases</h5>\r\n                        <p className='stat-number'>{stats[0].cases.active}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col col-12 col-sm-3 mb-3 mb-sm-0\">\r\n                <div className=\"card h-100 bg-astral\">\r\n                    <div className=\"card-body text-center\">\r\n                        <h5 className=\"card-title\">Recovered Cases</h5>\r\n                        <p className='stat-number'>{stats[0].cases.recovered}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col col-12 col-sm-3\">\r\n                <div className=\"card h-100 bg-red\">\r\n                    <div className=\"card-body text-center\">\r\n                        <h5 className=\"card-title\">Total Deaths</h5>\r\n                        <p className='stat-number'>{stats[0].deaths.total}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Global;","import React, { useState, useEffect } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\r\n\r\nconst History = ({ selectedCountry }) => {\r\n    const [history, setHistory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (selectedCountry) {\r\n            fetch(`https://covid-193.p.rapidapi.com/history?country=${selectedCountry}`, {\r\n                'method': 'GET',\r\n                'headers': {\r\n                    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n                    'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\r\n                }\r\n            }).then(async data => {\r\n                const stats = await data.json();\r\n                setHistory(stats.response);\r\n                setLoading(false);\r\n            }).catch(err => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n        } else {\r\n            fetch('https://covid-193.p.rapidapi.com/history?country=All', {\r\n                'method': 'GET',\r\n                'headers': {\r\n                    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n                    'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\r\n                }\r\n            }).then(async data => {\r\n                const stats = await data.json();\r\n                setHistory(stats.response);\r\n                setLoading(false);\r\n            }).catch(err => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n        }\r\n    }, [selectedCountry]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className='d-flex justify-content-center w-100'>\r\n                <ReactLoading type='spinningBubbles' color='#347B98' height={'10%'} width={'10%'} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`d-flex justify-content-center ${selectedCountry ? 'flex-column' : ''}`}>\r\n            {\r\n                selectedCountry ?\r\n                    <div className='d-flex justify-content-center'>\r\n                        <h3>History ({selectedCountry})</h3>\r\n                    </div>\r\n                    :\r\n                    null\r\n            }\r\n            <div style={{ width: '100%', maxWidth: '600px', height: '300px' }}>\r\n                <ResponsiveContainer>\r\n                    <LineChart\r\n                        data={history}\r\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                    >\r\n                        <XAxis\r\n                            dataKey='time'\r\n                            reversed\r\n                            tickFormatter={value => {\r\n                                return new Date(value).toLocaleDateString();\r\n                            }}\r\n                        />\r\n                        <YAxis dataKey='cases.active' />\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <Tooltip \r\n                            labelFormatter={value => {\r\n                                return new Date(value).toLocaleString();\r\n                            }}\r\n                        />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dot={false} name='Total Cases' dataKey=\"cases.total\" stroke=\"#052D3D\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dot={false} name='Active Cases' dataKey=\"cases.active\" stroke=\"#B2D732\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dot={false} name='Recovered Cases' dataKey=\"cases.recovered\" stroke=\"#347B98\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dot={false} name='Total Deaths' dataKey=\"deaths.total\" stroke=\"#FE2712\" activeDot={{ r: 8 }} />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default History;","import React, { useState, useEffect } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport History from './History';\r\n\r\nconst Country = () => {\r\n    const [countries, setCountries] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [country, setCountry] = useState('India');\r\n    const [stats, setStats] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            fetch('https://covid-193.p.rapidapi.com/countries', {\r\n                'method': 'GET',\r\n                'headers': {\r\n                    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n                    'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\r\n                }\r\n            }),\r\n            fetch(`https://covid-193.p.rapidapi.com/statistics?country=${country}`, {\r\n                'method': 'GET',\r\n                'headers': {\r\n                    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n                    'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\r\n                }\r\n            })\r\n        ]).then(async ([allCountires, data]) => {\r\n            const countries = await allCountires.json();\r\n            const stats = await data.json();\r\n            setCountries(countries.response);\r\n            setStats(stats.response);\r\n            setLoading(false);\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            console.log(err);\r\n        });\r\n    }, [])\r\n\r\n    const handleCountryChange = e => {\r\n        setIsLoading(true);\r\n        setCountry(e.target.value);\r\n        fetch(`https://covid-193.p.rapidapi.com/statistics?country=${e.target.value}`, {\r\n            'method': 'GET',\r\n            'headers': {\r\n                'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n                'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\r\n            }\r\n        }).then(async data => {\r\n            const stats = await data.json();\r\n            setStats(stats.response);\r\n            setIsLoading(false);\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const renderSelectBox = () => {\r\n        if (countries.length !== 0) {\r\n            \r\n            return (\r\n                <form className='w-100'>\r\n                    <div className='form-group row justify-content-center d-flex'>\r\n                        <label for='country' className='d-flex justify-content-center col-lg-6 col-sm-4 col-form-label col-md-6'><strong>Choose a Country</strong></label>\r\n                        <div className='d-flex justify-content-center col-sm-8 col-lg-6 col-md-6'>\r\n                            <select id='country' className='country-select' value={country} onChange={handleCountryChange}>\r\n                                {countries.map(country => <option key={country} value={country}>{country}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className='d-flex justify-content-center w-100'>\r\n                <ReactLoading type='spinningBubbles' color='#347B98' height={'10%'} width={'10%'} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <LoadingOverlay\r\n            spinner\r\n            active={isLoading}\r\n            text='Please wait...'\r\n        >\r\n            <div className='row display-flex'>\r\n                <div className='col-12 mb-2'>\r\n                    <div className='d-flex justify-content-center w-100 m-2'>\r\n                        {renderSelectBox()}\r\n                    </div>\r\n                </div>\r\n                <div className='col-12 col-lg-6 col-sm-12'>\r\n                    <div className='row'>\r\n                        <div className=\"col-12 col-sm-6 mb-3\">\r\n                            <div className=\"card h-100 bg-tiber\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <h5 className=\"card-title\">Total Cases</h5>\r\n                                    <p className='stat-number'>{stats[0].cases.total}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 mb-3\">\r\n                            <div className=\"card h-100 bg-green\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <h5 className=\"card-title\">Active Cases</h5>\r\n                                    <p className='stat-number'>{stats[0].cases.active}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className=\"col-12 col-sm-6 mb-3\">\r\n                            <div className=\"card h-100 bg-astral\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <h5 className=\"card-title\">Recovered Cases</h5>\r\n                                    <p className='stat-number'>{stats[0].cases.recovered}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 mb-3\">\r\n                            <div className=\"card h-100 bg-red\">\r\n                                <div className=\"card-body text-center\">\r\n                                    <h5 className=\"card-title\">Total Deaths</h5>\r\n                                    <p className='stat-number'>{stats[0].deaths.total}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-12 col-lg-6 col-sm-12'>\r\n                    <History selectedCountry={country} />\r\n                </div>\r\n            </div>\r\n        </LoadingOverlay>\r\n    );\r\n};\r\n\r\nexport default Country;","import React from 'react';\r\n\r\nimport Global from './Global';\r\nimport Country from './Country';\r\nimport History from './History';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div className='container my-2'>\r\n            <div className='row mb-3 mt-3'>\r\n                <div className='col-12'>\r\n                    <h4 className='text-left'>History (Global)</h4>\r\n                    <hr />\r\n                </div>\r\n                <div className='col-12'>\r\n                    <History />\r\n                </div>\r\n            </div>\r\n            <div className='row mb-3'>\r\n                <div className='col-12 mb-2'>\r\n                    <h4 className='text-left'>Global Stats</h4>\r\n                    <hr />\r\n                </div>\r\n                <div className='col-12'>\r\n                    <Global />\r\n                </div>\r\n            </div>\r\n            <div className='row mb-3'>\r\n                <div className='col-12 mb-2'>\r\n                    <h4 className='text-left'>Country Wise Stats</h4>\r\n                    <hr />\r\n                </div>\r\n                <div className='col-12'>\r\n                    <Country />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nfunction Icon() {\r\n  return (\r\n    <svg \r\n        height='30px' \r\n        width='30px' \r\n        xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"\r\n        style={{ fill: 'white' }}\r\n    >\r\n      <path\r\n        style={{\r\n          WebkitTextIndent: \"0\",\r\n          textIndent: \"0\",\r\n          WebkitTextAlign: \"start\",\r\n          textAlign: \"start\",\r\n          lineHeight: \"normal\",\r\n          WebkitTextTransform: \"none\",\r\n          textTransform: \"none\",\r\n          blockProgression: \"tb\",\r\n          InkscapeFontSpecification: \"Bitstream Vera Sans\"\r\n        }}\r\n        d=\"M14 3v2h1v1.063A9.87 9.87 0 009.687 8.25l-.75-.75.688-.688-1.406-1.406L5.406 8.22l1.407 1.406.687-.688.75.75A9.87 9.87 0 006.062 15H5v-1H3v4h2v-1h1.063a9.864 9.864 0 002.218 5.344l-.781.718-.688-.687-1.406 1.406 2.813 2.813 1.406-1.407-.688-.687.75-.781A9.846 9.846 0 0015 25.937V27h-1v2h4v-2h-1v-1.063a9.846 9.846 0 005.313-2.218h.03l.72.781-.688.688 1.406 1.406 2.813-2.813-1.407-1.406-.687.688-.781-.72c.005-.006-.006-.024 0-.03A9.846 9.846 0 0025.937 17H27v1h2v-4h-2v1h-1.063a9.87 9.87 0 00-2.187-5.313l.75-.75.688.688 1.406-1.406-2.813-2.813-1.406 1.407.688.687-.75.75A9.87 9.87 0 0017 6.062V5h1V3h-4zm2 5c4.43 0 8 3.57 8 8s-3.57 8-8 8-8-3.57-8-8 3.57-8 8-8zm-2.5 2.156a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM11 14.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm-7.5 4.344a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nimport Icon from '../utils/virusIcon';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-dark bg-chelsea text-white py-3'>\r\n            <div className='d-flex justify-content-center align-items-center w-100'>\r\n                <div className='mr-2'>\r\n                    <Icon />\r\n                </div>\r\n                <h3 className='m-0'>COVID-19 Statistic Updates</h3>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\n\nimport Dashboard from './scenes/Dashboard';\nimport Header from './scenes/Header';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div>\n      <Header />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}